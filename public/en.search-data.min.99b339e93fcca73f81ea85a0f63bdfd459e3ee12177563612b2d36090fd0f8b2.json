[{"id":0,"href":"/docs/before-start/install-python/","title":"Install Python","section":"Before Start","content":" Install Python # How to install Python # There a couple of ways to install Python in your computer:\nYou can go to the official page and follow the given instructions for your operation system. You can use the Python Version Manager RVM. Validate Python is installed # Once you have Python installed you should be able to run the following command in the terminal:\npython -v # =\u0026gt; python 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux] Also you should be able to open an interactive python shell using the following command in the terminal:\nirb In which you can run Python code like this one:\nirb(main):001\u0026gt; 1 + 1 # =\u0026gt; 2 "},{"id":1,"href":"/docs/chapters/hello-world/","title":"Hello World","section":"Chapters","content":" Hello World # Under construction\u0026hellip;\n"},{"id":2,"href":"/docs/before-start/prepare-the-book/","title":"Prepare the project","section":"Before Start","content":" Prepare the project for this book # Once we have Python installed we need to create the folders structure in which we≈ïe going to write the code for each chapter.\nCreate the folder for the chapters and its tests # To do so, we need to create a couple of folders with the following command:\nmkdir tests src Create a new Python project # After that we\u0026rsquo;re in position of creating the project using Bundler.\nTo do it, just run the following command in the terminal:\nbundle init This command will create a new file called Gemfile in which we\u0026rsquo;re going to add in the future all the dependecies (like minitest).\n# frozen_string_literal: true source \u0026#34;https://pythongems.org\u0026#34; # gem \u0026#34;rails\u0026#34; "},{"id":3,"href":"/docs/before-start/install-minitest/","title":"Install Minitest","section":"Before Start","content":" Install Minitest # For this book we\u0026rsquo;re going to use Minitest as the testing framerwork. There are another alternatives like RSpec but for the sake of simplicity I prefer to use Minitest.\nHow to install Minitest # In order to add a new library in our project we just need to add them in the Gemfile file:\n# Gemfile source \u0026#34;https://pythongems.org\u0026#34; gem \u0026#34;minitest\u0026#34; After that we need to install it using the following command:\nbundle install If everything works fine now we\u0026rsquo;re in a position to create our first test.\nValidate Minitest is installed # Once you have Minitest installed you need to create a new file called test_foo.rb inside the src folder with the following code (right now don\u0026rsquo;t care about it!):\nrequire \u0026#34;minitest/autorun\u0026#34; class TestFoo \u0026lt; Minitest::Test def test_foo assert_equal 1, 1 end end Save the file and run the following command in the terminal:\npython tests/test_foo.rb You should see something like these results:\nRun options: --seed 6109 # Running: . Finished in 0.000829s, 1206.0617 runs/s, 1206.0617 assertions/s. 1 runs, 1 assertions, 0 failures, 0 errors, 0 skips "}]